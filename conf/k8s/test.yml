apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harvest-api-test
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - host: harvest-test.on1y.net
    http:
      paths:
      - path: /api(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: harvest-api-test
            port:
              number: 80
---
apiVersion: v1
kind: Service
metadata:
  name: harvest-api-test
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: harvest-api-test
  sessionAffinity: ClientIP
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: harvest-api-test
spec:
  replicas: 1
  selector:
    matchLabels:
      app: harvest-api-test
  strategy:
    rollingUpdate:
      maxSurge: 75%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: harvest-api-test
    spec:
      containers:
      - name: harvest-api-test
        image: erriy/harvest-api:latest
        env:
        - name: PORT
          value: '80'
        - name: MONGO_USER
          valueFrom:
            configMapKeyRef:
              name: mongo-test-config
              key: user
        - name: MONGO_PASS
          valueFrom:
            configMapKeyRef:
              name: mongo-test-config
              key: pwd
        - name: MONGO_DB
          valueFrom:
            configMapKeyRef:
              name: mongo-test-config
              key: db
        - name: MONGO_HOST
          valueFrom:
            configMapKeyRef:
              name: mongo-test-config
              key: host
        - name: MONGO_PORT
          valueFrom:
            configMapKeyRef:
              name: mongo-test-config
              key: port
        - name: INVITE_CODE
          valueFrom:
            configMapKeyRef:
              name: harvest-config
              key: test.invite_code
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: host
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: port
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: redis-config
              key: test.db
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthy
            port: 80
            scheme: HTTP
          initialDelaySeconds: 300
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 300
          httpGet:
            path: /healthy
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 2
          successThreshold: 2
          timeoutSeconds: 3